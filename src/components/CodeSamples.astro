---
import { codeSamplesOverview, codeSamplesData } from '../data/codeSamples';
import OverhubDoc from '../code-samples/overhub-api/README.md';
import AdminDoc from '../code-samples/admin/README.md';
import PortableDoc from '../code-samples/portable-cart/README.md';
import CodeBrowser from './CodeBrowser.astro';
import { discoverCodeSamples } from '../utils/discoverCodeSamples';

const docMap = {
  'overhub-api': OverhubDoc,
  admin: AdminDoc,
  'portable-cart': PortableDoc
};

// Auto-discover all code sample projects
const discoveredProjects = discoverCodeSamples();
---

<main class="code-samples-container">
  <header class="hero">
    <p class="hero-eyebrow">{codeSamplesOverview.eyebrow}</p>
    <h1 class="hero-title">{codeSamplesOverview.title}</h1>
    <p class="hero-description">{codeSamplesOverview.description}</p>

    <div class="hero-stats">
      {codeSamplesOverview.stats.map((stat) => (
        <div class="stat-card">
          <span class="stat-value">{stat.value}</span>
          <span class="stat-label">{stat.label}</span>
        </div>
      ))}
    </div>

    <div class="hero-themes">
      {codeSamplesOverview.themes.map((theme) => (
        <div class="theme-card">
          <h3>{theme.heading}</h3>
          <p>{theme.copy}</p>
        </div>
      ))}
    </div>
  </header>

  <div class="samples-layout">
    <aside class="samples-nav" aria-label="Code samples navigation">
      <h2 class="nav-heading">Samples</h2>
      <div class="nav-items">
        {codeSamplesData.map((sample) => (
          <a class="nav-item" href={`#${sample.id}`}>
            <span class="nav-title">{sample.title}</span>
            <span class="nav-subtitle">{sample.summary}</span>
          </a>
        ))}
      </div>
    </aside>

    <section class="samples-content">
      {codeSamplesData.map((sample) => {
        const Doc = docMap[sample.docId];
        return (
          <article id={sample.id} class="sample-card">
            <div class="sample-header">
              <p class="sample-eyebrow">{codeSamplesOverview.eyebrow}</p>
              <h2 class="sample-title">{sample.title}</h2>
              <p class="sample-summary">{sample.summary}</p>
            </div>

            <div class="sample-stack">
              {sample.stack.map((tech) => (
                <span class="stack-pill">{tech}</span>
              ))}
            </div>

            <div class="sample-metrics">
              {sample.metrics.map((metric) => (
                <div class="metric">
                  <span class="metric-value">{metric.value}</span>
                  <span class="metric-label">{metric.label}</span>
                </div>
              ))}
            </div>

            <div class="sample-context">
              <div class="context-block">
                <h3>Focus</h3>
                <p>{sample.context.focus}</p>
              </div>
              <div class="context-block">
                <h3>Responsibilities</h3>
                <ul>
                  {sample.context.responsibilities.map((item) => (
                    <li>{item}</li>
                  ))}
                </ul>
              </div>
            </div>

            <div class="sample-highlights">
              {sample.highlights.map((highlight) => (
                <div class="highlight-card">
                  <h3>{highlight.title}</h3>
                  <p>{highlight.description}</p>
                </div>
              ))}
            </div>

            <details class="sample-doc">
              <summary>Read the architecture notes</summary>
              <div class="doc-content">
                {Doc ? <Doc /> : <p class="doc-error">Documentation not available for this sample.</p>}
              </div>
            </details>

            {(() => {
              const discoveredProject = discoveredProjects.find(p => p.id === sample.id);
              return discoveredProject ? (
                <div class="sample-code-browser">
                  <h3 class="browser-heading">Browse the Code</h3>
                  <CodeBrowser project={discoveredProject} />
                </div>
              ) : null;
            })()}
          </article>
        );
      })}
    </section>
  </div>
</main>

<style>
  .code-samples-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2.5rem 1.5rem 6rem;
  }

  .hero {
    background: hsl(var(--surface));
    border-radius: 24px;
    padding: 2.5rem;
    border: 1px solid hsl(var(--border) / 0.6);
    box-shadow: 0 18px 40px rgba(36, 24, 18, 0.08);
    display: grid;
    gap: 1.5rem;
    margin-bottom: 3rem;
  }

  .hero-eyebrow {
    font-family: var(--font-sans);
    font-size: 0.85rem;
    text-transform: uppercase;
    letter-spacing: 0.16em;
    color: hsl(var(--accent));
  }

  .hero-title {
    font-size: 2.5rem;
    letter-spacing: -0.02em;
    line-height: 1.1;
  }

  .hero-description {
    max-width: 620px;
    color: hsl(var(--muted-foreground));
    font-size: 1.1rem;
  }

  .hero-stats {
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: 1rem;
  }

  .stat-card {
    background: hsl(var(--accent-soft));
    border-radius: 16px;
    padding: 1.25rem;
    display: flex;
    flex-direction: column;
    gap: 0.35rem;
    border: 1px solid hsl(var(--accent) / 0.1);
  }

  .stat-value {
    font-family: var(--font-sans);
    font-size: 1.4rem;
    font-weight: 600;
  }

  .stat-label {
    font-size: 0.9rem;
    color: hsl(var(--muted-foreground));
  }

  .hero-themes {
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: 1rem;
  }

  .theme-card {
    background: hsl(var(--surface));
    border-radius: 16px;
    padding: 1.5rem;
    border: 1px solid hsl(var(--border));
    box-shadow: inset 0 0 0 1px hsl(var(--surface) / 0.6);
  }

  .theme-card h3 {
    font-size: 1.1rem;
    margin-bottom: 0.75rem;
  }

  .theme-card p {
    color: hsl(var(--muted-foreground));
    font-size: 0.95rem;
    line-height: 1.5;
  }

  .samples-layout {
    display: grid;
    grid-template-columns: 260px minmax(0, 1fr);
    gap: 2rem;
  }

  .samples-nav {
    position: sticky;
    top: 5.5rem;
    align-self: start;
    display: grid;
    gap: 1rem;
    background: hsl(var(--surface));
    border-radius: 20px;
    padding: 1.5rem;
    border: 1px solid hsl(var(--border));
  }

  .nav-heading {
    font-size: 1rem;
    font-family: var(--font-sans);
    text-transform: uppercase;
    letter-spacing: 0.14em;
    color: hsl(var(--muted-foreground));
  }

  .nav-items {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .nav-item {
    display: flex;
    flex-direction: column;
    gap: 0.3rem;
    text-decoration: none;
    padding: 0.85rem;
    border-radius: 12px;
    border: 1px solid transparent;
    background: transparent;
    transition: var(--transition-smooth);
  }

  .nav-item:hover,
  .nav-item:focus {
    background: hsl(var(--accent-soft));
    border-color: hsl(var(--accent) / 0.4);
  }

  .nav-title {
    font-family: var(--font-sans);
    font-weight: 600;
    color: hsl(var(--foreground));
    font-size: 0.95rem;
  }

  .nav-subtitle {
    font-size: 0.85rem;
    color: hsl(var(--muted-foreground));
  }

  .samples-content {
    display: grid;
    gap: 2rem;
  }

  .sample-card {
    background: hsl(var(--surface));
    border-radius: 24px;
    padding: 2rem;
    border: 1px solid hsl(var(--border));
    box-shadow: 0 12px 28px rgba(36, 24, 18, 0.06);
    display: grid;
    gap: 2rem;
  }

  .sample-header {
    display: grid;
    gap: 0.75rem;
  }

  .sample-eyebrow {
    font-size: 0.75rem;
    letter-spacing: 0.18em;
    text-transform: uppercase;
    font-family: var(--font-sans);
    color: hsl(var(--accent));
  }

  .sample-title {
    font-size: 2rem;
    letter-spacing: -0.015em;
  }

  .sample-summary {
    font-size: 1rem;
    color: hsl(var(--muted-foreground));
    max-width: 720px;
  }

  .sample-stack {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .stack-pill {
    font-family: var(--font-sans);
    font-size: 0.8rem;
    padding: 0.35rem 0.75rem;
    border-radius: 999px;
    background: hsl(var(--muted));
    color: hsl(var(--subtle));
    border: 1px solid hsl(var(--border) / 0.6);
  }

  .sample-metrics {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 1rem;
  }

  .metric {
    background: hsl(var(--accent-soft));
    border-radius: 16px;
    padding: 1rem;
    border: 1px solid hsl(var(--accent) / 0.2);
    display: grid;
    gap: 0.35rem;
  }

  .metric-value {
    font-family: var(--font-sans);
    font-weight: 600;
    font-size: 1.1rem;
  }

  .metric-label {
    font-size: 0.85rem;
    color: hsl(var(--muted-foreground));
  }

  .sample-context {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 1.5rem;
  }

  .context-block {
    background: rgba(255, 255, 255, 0.6);
    padding: 1.25rem;
    border-radius: 16px;
    border: 1px solid hsl(var(--border));
    box-shadow: inset 0 0 0 1px hsl(var(--surface) / 0.5);
    display: grid;
    gap: 0.75rem;
  }

  .context-block h3 {
    font-size: 1rem;
    font-family: var(--font-sans);
  }

  .context-block ul {
    display: grid;
    gap: 0.65rem;
    padding-left: 1.25rem;
    color: hsl(var(--muted-foreground));
  }

  .sample-highlights {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 1.25rem;
  }

  .highlight-card {
    background: hsl(var(--surface));
    border-radius: 16px;
    padding: 1.5rem;
    border: 1px solid hsl(var(--border));
    box-shadow: inset 0 0 0 1px hsl(var(--muted) / 0.4);
    display: grid;
    gap: 0.75rem;
  }

  .highlight-card h3 {
    font-size: 1rem;
    font-family: var(--font-sans);
  }

  .highlight-card p {
    color: hsl(var(--muted-foreground));
    font-size: 0.95rem;
    line-height: 1.55;
  }

  .sample-doc {
    border: 1px solid hsl(var(--border));
    border-radius: 16px;
    background: rgba(255, 255, 255, 0.9);
    padding: 1.25rem 1.5rem;
  }

  .sample-doc summary {
    font-family: var(--font-sans);
    font-weight: 600;
    cursor: pointer;
    list-style: none;
    position: relative;
    padding-right: 1.5rem;
  }

  .sample-doc summary::marker {
    content: '';
  }

  .sample-doc summary::after {
    content: '';
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 0.65rem;
    height: 0.65rem;
    border-right: 2px solid hsl(var(--accent));
    border-bottom: 2px solid hsl(var(--accent));
    transform-origin: center;
    rotate: 45deg;
    transition: var(--transition-smooth);
  }

  .sample-doc[open] summary::after {
    rotate: 225deg;
    top: calc(50% + 0.15rem);
  }

  .doc-content {
    margin-top: 1.5rem;
    max-height: 32rem;
    overflow: auto;
  }

  .doc-error {
    font-size: 0.95rem;
    color: hsl(var(--muted-foreground));
  }

  .doc-content :global(h1) {
    font-size: 1.6rem;
    margin-bottom: 1rem;
  }

  .doc-content :global(h2) {
    font-size: 1.25rem;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }

  .doc-content :global(p),
  .doc-content :global(li) {
    font-size: 0.95rem;
    color: hsl(var(--muted-foreground));
  }

  .doc-content :global(pre) {
    background: hsl(var(--muted));
    padding: 1rem;
    border-radius: 12px;
    overflow: auto;
  }

  .doc-content :global(code) {
    font-family: 'Source Code Pro', 'Fira Code', monospace;
  }

  .sample-code-browser {
    display: grid;
    gap: 1rem;
    padding-top: 1rem;
  }

  .browser-heading {
    font-size: 1.1rem;
    font-family: var(--font-sans);
    color: hsl(var(--foreground));
    font-weight: 600;
  }

  @media (max-width: 1024px) {
    .hero-stats,
    .hero-themes {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    .samples-layout {
      grid-template-columns: 1fr;
    }

    .samples-nav {
      position: static;
      order: -1;
    }
  }

  @media (max-width: 768px) {
    .hero,
    .sample-card {
      padding: 1.75rem;
    }

    .hero-title {
      font-size: 2rem;
    }

    .hero-themes {
      grid-template-columns: 1fr;
    }

    .hero-stats {
      grid-template-columns: 1fr 1fr;
    }

    .sample-highlights {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 600px) {
    .hero-stats {
      grid-template-columns: 1fr;
    }
  }
</style>
